import React, {useEffect, useRef, ReactNode, useState} from 'react';
import './Features.css';

const featuresData = [
    {
        svg: (
            <svg
                viewBox="0 0 24.00 24.00"
                xmlns="http://www.w3.org/2000/svg"
                fill="none"
                stroke="#21a6e8"
                transform="matrix(1, 0, 0, 1, 0, 0)"
            >
                <g id="SVGRepo_bgCarrier" strokeWidth="0"></g>
                <g id="SVGRepo_tracerCarrier" strokeLinecap="round" strokeLinejoin="round"></g>
                <g id="SVGRepo_iconCarrier">
                    {' '}
                    <path
                        stroke="#21a6e8"
                        strokeLinecap="round"
                        strokeLinejoin="round"
                        strokeWidth="1.6799999999999997"
                        d="M13.5 10l-3 5h4l-3 5.5M8 8.036a3.484 3.484 0 011.975.99M7.5 15a3.5 3.5 0 11.87-6.891 5.002 5.002 0 019.614 1.49A2.751 2.751 0 0117.25 15"
                    ></path>{' '}
                </g>
            </svg>
        ),
        text: 'All Conditions',
    },
    {
        svg: (
            <svg
                width="185px"
                height="185px"
                viewBox="0 0 24.00 24.00"
                fill="none"
                xmlns="http://www.w3.org/2000/svg"
                stroke="#21a6e8"
                strokeWidth="0.00024000000000000003"
            >
                <g id="SVGRepo_bgCarrier" strokeWidth="0"></g>
                <g id="SVGRepo_tracerCarrier" strokeLinecap="round" strokeLinejoin="round"></g>
                <g id="SVGRepo_iconCarrier">
                    {' '}
                    <path
                        fillRule="evenodd"
                        clipRule="evenodd"
                        d="M9.64958 1.06227C9.67527 1.07083 9.71178 1.08315 9.75838 1.09928C9.85156 1.13152 9.9852 1.179 10.1535 1.24206C10.49 1.3681 10.9661 1.55676 11.5355 1.81077C12.6715 2.31751 14.193 3.09072 15.7215 4.15504C18.745 6.26051 22 9.6569 22 14.5393C22 16.6738 21.4305 18.7869 20.1046 20.3856C18.7552 22.0126 16.7095 23 14 23C13.9352 23 13.6752 22.9978 13.4169 22.8125C13.0566 22.5541 12.9699 22.154 13.0085 21.8667C13.0376 21.6501 13.1305 21.5025 13.1576 21.4602C13.1966 21.3993 13.234 21.3556 13.2534 21.3338C13.293 21.2893 13.3281 21.2581 13.3407 21.247C13.3575 21.2322 13.3716 21.2207 13.3801 21.214C13.4065 21.1929 13.4323 21.1745 13.4402 21.1689L13.4413 21.1681L13.5185 21.1136C13.5762 21.0727 13.6587 21.013 13.7588 20.9347C13.9606 20.7768 14.2297 20.546 14.4969 20.2526C15.0448 19.6509 15.5 18.8819 15.5 18C15.5 16.3681 14.571 14.8515 13.5067 13.669C12.9869 13.0914 12.4644 12.6266 12.0715 12.3065C12.0471 12.2866 12.0233 12.2674 12 12.2487C11.9767 12.2674 11.9529 12.2866 11.9285 12.3065C11.5356 12.6266 11.0131 13.0914 10.4933 13.669C9.42904 14.8515 8.5 16.3681 8.5 18C8.5 18.8887 8.95405 19.6581 9.49825 20.2564C9.76406 20.5486 10.0319 20.7778 10.2327 20.934C10.3323 21.0114 10.4142 21.0699 10.47 21.1087C10.4934 21.125 10.5115 21.1374 10.5281 21.1487L10.5401 21.1569C10.547 21.1616 10.5634 21.1727 10.5787 21.1837C10.5832 21.1869 10.6139 21.2088 10.6476 21.2376C10.6583 21.2467 10.6772 21.2631 10.6995 21.285C10.7154 21.3005 10.7647 21.3492 10.8157 21.4212C10.8424 21.4607 10.901 21.5658 10.9302 21.6325C10.9668 21.7437 10.9991 22.045 10.9733 22.2301C10.89 22.4561 10.6027 22.798 10.4241 22.9056C10.2979 22.9546 10.0834 22.9965 10 23C7.29045 23 5.24478 22.0126 3.89543 20.3856C2.56953 18.7869 2 16.6737 2 14.5393C2 11.9892 2.88357 10.3815 4.05286 9.15505C4.5965 8.58485 5.19715 8.10222 5.73579 7.66943C5.75008 7.65795 5.76432 7.6465 5.77852 7.63509C6.34602 7.17901 6.84273 6.77589 7.26778 6.31892C8.30821 5.20036 8.54446 4.18715 8.56055 3.49801C8.56885 3.14243 8.51857 2.85415 8.46943 2.66212C8.44495 2.56642 8.42112 2.49607 8.40592 2.45501C8.39834 2.43454 8.39298 2.42157 8.39089 2.41661C8.22725 2.05871 8.28834 1.63669 8.54841 1.34035C8.82218 1.02842 9.26272 0.934509 9.64958 1.06227ZM12.622 10.214C12.6607 10.241 12.7152 10.2795 12.7831 10.3291C12.9187 10.4281 13.1087 10.5717 13.3348 10.756C13.7856 11.1233 14.3881 11.6586 14.9933 12.331C16.179 13.6485 17.5 15.6319 17.5 18C17.5 18.9472 17.2103 19.7677 16.8256 20.4413C17.5441 20.1103 18.1163 19.65 18.5651 19.1089C19.516 17.9623 20 16.3451 20 14.5393C20 10.6378 17.405 7.76451 14.5785 5.79631C13.182 4.82379 11.7785 4.10916 10.7207 3.63727C10.666 3.61285 10.6122 3.5891 10.5595 3.56601C10.5278 4.72134 10.1107 6.19906 8.73222 7.68106C8.19401 8.25969 7.58503 8.7491 7.03517 9.191L7.0314 9.19404C6.46252 9.65123 5.95122 10.0623 5.5004 10.5351C4.65194 11.4251 4 12.5501 4 14.5393C4 16.3451 4.48402 17.9623 5.43489 19.1089C5.88233 19.6484 6.4524 20.1075 7.16781 20.4382C6.78613 19.7652 6.5 18.9462 6.5 18C6.5 15.6319 7.82096 13.6485 9.00671 12.331C9.61193 11.6586 10.2144 11.1233 10.6652 10.756C10.8913 10.5717 11.0813 10.4281 11.2169 10.3291C11.2848 10.2795 11.3393 10.241 11.378 10.214C11.7481 9.95634 12.2491 9.9544 12.622 10.214Z"
                        fill="#21a6e8"
                    ></path>{' '}
                </g>
            </svg>
        ),
        text: 'ATEX Zone',
    },
    {
        svg: (
            <svg
                fill="#21a6e8"
                viewBox="0 0 1024 1024"
                xmlns="http://www.w3.org/2000/svg"
                stroke="#21a6e8"
                strokeWidth="24.576"
            >
                <g id="SVGRepo_bgCarrier" strokeWidth="0"></g>
                <g id="SVGRepo_tracerCarrier" strokeLinecap="round" strokeLinejoin="round"></g>
                <g id="SVGRepo_iconCarrier">
                    <path d="M187.698 120.105c41.846-15.492 89.309-5.554 121.432 26.561 44.941 44.941 44.941 117.826-.002 162.769-44.953 44.953-117.828 44.953-162.781 0-32.25-32.25-42.125-79.975-26.367-121.934 3.977-10.589-1.383-22.396-11.972-26.373s-22.396 1.383-26.373 11.972c-21.357 56.869-7.968 121.581 35.749 165.298 60.949 60.949 159.758 60.949 220.707 0 60.939-60.939 60.939-159.758 0-220.697-43.541-43.53-107.898-57.005-164.614-36.008-10.607 3.927-16.023 15.709-12.096 26.316s15.709 16.023 26.316 12.096z"></path>
                    <path d="M161.408 118.082l52.879 52.869c4.331 4.334 4.331 11.381-.001 15.713l-27.924 27.924c-4.341 4.341-11.373 4.341-15.714 0l-52.594-52.584c-7.999-7.997-20.966-7.996-28.963.003s-7.996 20.966.003 28.963l52.593 52.582c20.336 20.336 53.302 20.336 73.639-.001l27.924-27.924c20.326-20.326 20.326-53.297.006-73.634l-52.887-52.877c-7.999-7.997-20.966-7.996-28.963.003s-7.996 20.966.003 28.963zM836.42 904.635c-41.846 15.492-89.309 5.554-121.432-26.561-44.941-44.941-44.941-117.826.002-162.769 44.953-44.953 117.828-44.953 162.781 0 32.25 32.25 42.125 79.975 26.367 121.934-3.977 10.589 1.383 22.396 11.972 26.373s22.396-1.383 26.373-11.972c21.357-56.869 7.968-121.581-35.749-165.298-60.949-60.949-159.758-60.949-220.707 0-60.939 60.939-60.939 159.758 0 220.697 43.541 43.53 107.898 57.005 164.614 36.008 10.607-3.927 16.023-15.709 12.096-26.316s-15.709-16.023-26.316-12.096z"></path>
                    <path d="M862.712 906.659l-52.869-52.869c-4.34-4.34-4.34-11.377-.006-15.708l27.923-27.933c4.339-4.339 11.37-4.339 15.711.003l52.594 52.584c7.999 7.997 20.966 7.996 28.963-.003s7.996-20.966-.003-28.963l-52.593-52.582c-20.336-20.336-53.302-20.336-73.639.001l-27.917 27.927c-20.335 20.319-20.335 53.299.003 73.638l52.869 52.869c7.998 7.998 20.965 7.998 28.963 0s7.998-20.965 0-28.963zM674.469 738.186l-391.26-391.26c-7.998-7.998-20.965-7.998-28.963 0s-7.998 20.965 0 28.963l391.26 391.26c7.998 7.998 20.965 7.998 28.963 0s7.998-20.965 0-28.963zM343.768 279.258l400.374 400.374c7.998 7.998 20.965 7.998 28.963 0s7.998-20.965 0-28.963L372.731 250.295c-7.998-7.998-20.965-7.998-28.963 0s-7.998 20.965 0 28.963zm255.917 112.52l176.732-176.732c7.998-7.998 7.998-20.965 0-28.963s-20.965-7.998-28.963 0L570.722 362.815c-7.998 7.998-7.998 20.965 0 28.963s20.965 7.998 28.963 0zm214.393-149.914L631.53 422.641c-8.037 7.959-8.1 20.926-.141 28.963s20.926 8.1 28.963.141L842.9 270.968c8.037-7.959 8.1-20.926.141-28.963s-20.926-8.1-28.963-.141z"></path>
                    <path d="M945.721 131.005a20.48 20.48 0 014.873 21.176l-28.201 81.531a20.481 20.481 0 01-12.659 12.66l-81.541 28.211a20.48 20.48 0 01-21.179-4.874l-53.32-53.33a20.48 20.48 0 01-4.872-21.175l28.201-81.531a20.478 20.478 0 0112.658-12.659l81.531-28.211a20.478 20.478 0 0121.178 4.873l53.33 53.33zm-73.228-15.302l-60.012 20.765-20.758 60.014 35.194 35.201 60.021-20.766 20.758-60.012-35.202-35.202zm-421.165 544.57L208.763 902.838c-7.497 7.497-16.502 8.466-19.734 5.237l-74.541-74.541c-3.223-3.226-2.254-12.226 5.248-19.733l242.089-242.079c7.998-7.998 7.998-20.965.001-28.963s-20.965-7.998-28.963-.001L90.769 784.842c-22.28 22.295-26.003 56.877-5.249 77.648l74.553 74.553c20.778 20.76 55.375 17.036 77.654-5.243l242.565-242.565c7.998-7.998 7.998-20.965 0-28.963s-20.965-7.998-28.963 0z"></path>
                </g>
            </svg>
        ),
        text: 'Reduced Maintenance',
    },
    {
        svg: (
            <svg
                height="200px"
                width="200px"
                version="1.1"
                id="_x32_"
                xmlns="http://www.w3.org/2000/svg"
                viewBox="0 0 512 512"
                fill="#21a6e8"
            >
                <g id="SVGRepo_bgCarrier" strokeWidth="0"></g>
                <g id="SVGRepo_tracerCarrier" strokeLinecap="round" strokeLinejoin="round"></g>
                <g id="SVGRepo_iconCarrier">
                    <g>
                        <path d="M487.014,300.33l-211.416,69.377c6.826,7.133,12.37,15.629,16.202,25.26l204.272-67.029 c7.63-2.499,11.778-10.71,9.281-18.335C502.846,301.977,494.639,297.824,487.014,300.33z"></path>
                        <path d="M228.332,345.781l-76.42-232.859c-11.163-34.021-40.151-59.102-75.416-65.26L17.03,37.273 C9.126,35.893,1.595,41.172,0.218,49.09c-1.376,7.918,3.907,15.44,11.821,16.821l-0.009-0.01L71.496,76.29 c24.684,4.314,44.986,21.873,52.8,45.686l74.078,225.735C208.413,345.09,218.54,344.531,228.332,345.781z"></path>
                        <path d="M199.736,367.398c-31.358,10.313-48.41,44.04-38.136,75.402c10.303,31.353,44.027,48.411,75.394,38.128 c31.358-10.293,48.415-44.022,38.136-75.384C264.832,374.192,231.104,357.124,199.736,367.398z M237.098,433.643 c-2.469,4.844-6.623,8.638-12.185,10.473c-5.568,1.808-11.155,1.23-16.022-1.22c-4.844-2.479-8.638-6.623-10.469-12.186 c-1.821-5.564-1.225-11.154,1.211-16.008c2.474-4.854,6.628-8.648,12.19-10.473c5.567-1.826,11.159-1.23,16.022,1.201 c4.844,2.478,8.633,6.632,10.469,12.204C240.13,423.179,239.534,428.771,237.098,433.643z"></path>
                        <path d="M512,266.641l-3.023-9.215L433.712,28.078l-254.675,83.577l78.288,238.544L512,266.641z M421.342,52.524 l66.206,201.743L269.69,325.752l-66.198-201.733L421.342,52.524z"></path>
                        <path d="M389.279,213.263c13.69,5.658,19.626,19.906,16.864,26.282c-2.332,5.431-6.693,13.075-6.693,13.075 l17.351-5.694l17.361-5.696c0,0-8.042-3.577-13.137-6.557c-6.012-3.51-9.668-18.496-1.991-31.174 c12.919-21.305,7.01-37.219,7.01-37.219s-5.076,1.675-11.216,3.681l-5.648,11.164l4.905-1.618l-11.792,27.928l1.731-20.738 l-8.401,2.752l1.646-13.728c-1.636,0.549-2.862,0.946-3.458,1.145c-3.713,1.22-32.229,10.577-32.229,10.577 S366.246,203.755,389.279,213.263z"></path>
                    </g>
                </g>
            </svg>
        ),
        text: 'Lightweight Transportable',
    },
];

const Features = () => {
    const sectionRef = useRef<HTMLElement | null>(null);
    const [visible, setVisible] = useState(false);

    useEffect(() => {
        const element = sectionRef.current;
        const grandParent = sectionRef.current?.parentElement?.parentElement;

        if (!element || !grandParent) return;

        const handleScroll = () => {
            const grandParentRect = grandParent.getBoundingClientRect();
            const rect = element.getBoundingClientRect();

            const top = rect.top - grandParentRect.top;
            const bottom = rect.bottom - grandParentRect.top;
            const height = window.innerHeight;

            setVisible(bottom > 0 && top < height);
        };

        grandParent.addEventListener('scroll', handleScroll, {passive: true});
        handleScroll();
        return () => grandParent.removeEventListener('scroll', handleScroll);
    }, []);

    return (
        <section className={`features ${visible ? 'visible' : 'hidden'}`} ref={sectionRef}>
            <h2>Key Features</h2>
            <div className="features-table">
                {featuresData.map((item, index) => (
                    <div className="feature-item" key={index}>
                        <span className="svg">{item.svg}</span>
                        <p className="text">{item.text}</p>
                    </div>
                ))}
            </div>
        </section>
    );
};

export default Features;
